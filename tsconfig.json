{
	"compilerOptions": {
		"outDir": "./dist/",
		"module": "esnext",
		"target": "es6",
		"allowJs": true,
		"moduleResolution": "node",
		"sourceMap": true,
		
		"strict": true,
		"noImplicitAny": false,
		"strictNullChecks": false,
		
		"resolveJsonModule": true,
		
		"lib": [
			"ES2020",
			"dom",
			"dom.iterable",
		],

		"baseUrl": "src",
		"paths": {
			"@/*": ["./*"]
		},

		"types": [
			// Only declare "global" typings here (or typings that augment other typings, such as jqueryui, which adds methods)
			// Other typings are automatically attached to things that manually imported

			// Normally typescript picks up all type declarations in node_modules/@types
			// However the nodejs definitions are pulled in by a transitive dependency (webpack-dev-server -> del -> glob)
			// causing all sorts of issues where DOM functions such as setTimeout are resolved to the nodejs version, which is slightly different
			// additionally, it declares a bunch of global variables to exist, and throws off autocompletion
			// making it easy to think code works when it actually wouldn't (and thus cause runtime errors)
			// So only autoload those typings we actually want and need.

			// See https://github.com/sindresorhus/del/issues/88
			"@types/jquery"
		],
		// "allowSyntheticDefaultImports": true,

		// Output type definitions for exported functions as separate .d.ts files in the /dist/ dir.
		"declaration": true,
		"declarationDir": "dist",
	}
  }